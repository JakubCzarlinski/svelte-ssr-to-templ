package types

const DefaultType string = "string"

var FieldTypeMap = map[string]string{
	"string":             "string",
	"int":                "int",
	"bool":               "bool",
	"[]":                 "[]string",
	"[]string":           "[]string",
	"[]int":              "[]int",
	"[]bool":             "[]bool",
	"{string, string}":   "map[string]string",
	"{string, int}":      "map[string]int",
	"{string, bool}":     "map[string]bool",
	"{string, []string}": "map[string][]string",
	"{string, []int}":    "map[string][]int",
	"{string, []bool}":   "map[string][]bool",
	"{int, string}":      "map[int]string",
	"{int, int}":         "map[int]int",
	"{int, bool}":        "map[int]bool",
	"{int, []string}":    "map[int][]string",
	"{int, []int}":       "map[int][]int",
	"{int, []bool}":      "map[int][]bool",
	"{bool, string}":     "map[bool]string",
	"{bool, int}":        "map[bool]int",
	"{bool, bool}":       "map[bool]bool",
	"{bool, []string}":   "map[bool][]string",
	"{bool, []int}":      "map[bool][]int",
	"{bool, []bool}":     "map[bool][]bool",
}

// TODO(czarlinski): some of the type casts are incorrect.
var ListTypeToStringFunc = map[string]string{
	"string":             "",
	"int":                "strconv.Itoa",
	"bool":               "strconv.FormatBool",
	"[]":                 "string",
	"[]string":           "string",
	"[]int":              "string",
	"[]bool":             "string",
	"{string, string}":   "string",
	"{string, int}":      "string",
	"{string, bool}":     "string",
	"{string, []string}": "string",
	"{string, []int}":    "string",
	"{string, []bool}":   "string",
	"{int, string}":      "string",
	"{int, int}":         "string",
	"{int, bool}":        "string",
	"{int, []string}":    "string",
	"{int, []int}":       "string",
	"{int, []bool}":      "string",
	"{bool, string}":     "string",
	"{bool, int}":        "string",
	"{bool, bool}":       "string",
	"{bool, []string}":   "string",
	"{bool, []int}":      "string",
	"{bool, []bool}":     "string",
}

var MapTypeToStringFunc = map[string]string{
	"string":             "",
	"int":                "strconv.Itoa",
	"bool":               "strconv.FormatBool",
	"[]":                 "string",
	"[]string":           "string",
	"[]int":              "string",
	"[]bool":             "string",
	"{string, string}":   "",
	"{string, int}":      "strconv.Itoa",
	"{string, bool}":     "strconv.FormatBool",
	"{string, []string}": "string",
	"{string, []int}":    "string",
	"{string, []bool}":   "string",
	"{int, string}":      "",
	"{int, int}":         "strconv.Itoa",
	"{int, bool}":        "strconv.FormatBool",
	"{int, []string}":    "string",
	"{int, []int}":       "string",
	"{int, []bool}":      "string",
	"{bool, string}":     "",
	"{bool, int}":        "strconv.Itoa",
	"{bool, bool}":       "strconv.FormatBool",
	"{bool, []string}":   "string",
	"{bool, []int}":      "string",
	"{bool, []bool}":     "string",
}
